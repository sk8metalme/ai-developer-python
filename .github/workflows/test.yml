name: Tests

on:
  push:
    branches: [ main, init ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run simple tests
      run: |
        python test_simple.py
    
    - name: Run unittest tests
      run: |
        python -m unittest discover -s . -p "test_*.py" -v
      continue-on-error: true
    
    - name: Test import without network calls
      run: |
        export SLACK_BOT_TOKEN="test-token"
        export SLACK_SIGNING_SECRET="test-secret"
        export ANTHROPIC_API_KEY="test-api-key"
        export GITHUB_ACCESS_TOKEN="test-github-token"
        python -c "print('Environment variables set for testing')"

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
    
    - name: Check formatting with black
      run: |
        black --check --diff .
      continue-on-error: true